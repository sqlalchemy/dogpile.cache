[tox]
envlist = py

[testenv]
cov_args=--cov=dogpile --cov-append --cov-report term --cov-report xml


setenv=
	BASECOMMAND=python -m pytest

	{generic}: 	RUNTESTS=-k 'not test_dbm_backend and not test_memcached_backend and not test_redis_backend'

	{memcached}: PIFPAF=pifpaf --env-prefix DOGPILE run memcached --port {env:TOX_DOGPILE_PORT:11234} --
	{memcached}: RUNTESTS=tests/cache/test_memcached_backend.py

	{redis}: PIFPAF=pifpaf --env-prefix DOGPILE run redis --port {env:TOX_DOGPILE_PORT:11234} --
	{redis}: RUNTESTS=tests/cache/test_redis_backend.py

	{redis_sentinel}: PIFPAF=pifpaf --env-prefix DOGPILE run redis --sentinel --sentinel-port {env:TOX_DOGPILE_PORT:11234} --
	{redis_sentinel}: RUNTESTS=tests/cache/test_redis_sentinel_backend.py

	{dbm}: RUNTESTS=tests/cache/test_dbm_backend.py

    {cov}: COVERAGE={[testenv]cov_args}


deps=
	pytest
	mock
	Mako
	decorator>=4.0.0
	# Needed for an async runner test.
	{py27}: futures

	{memcached}: pylibmc

	# the py3k python-memcached fails for multiple
	# delete
	{py27-memcached}: python-memcached
	{memcached}: python-binary-memcached
	{memcached}: pifpaf
	{redis}: redis
	{redis}: pifpaf
	{redis_sentinel}: redis
	{redis_sentinel}: pifpaf
	{cov}: pytest-cov

commands=
  {env:PIFPAF:} {env:BASECOMMAND} {env:COVERAGE:} {env:RUNTESTS:} {posargs}

sitepackages=False
usedevelop=True


# thanks to https://julien.danjou.info/the-best-flake8-extensions/
[testenv:pep8]
basepython = python3
deps=
      flake8
      flake8-import-order
      flake8-builtins
      flake8-docstrings
      flake8-rst-docstrings
      # used by flake8-rst-docstrings
      pygments
commands = flake8 ./dogpile/ ./tests/ setup.py  {posargs}
